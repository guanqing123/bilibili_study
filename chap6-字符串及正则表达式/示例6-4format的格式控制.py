"""
格式化字符串的详细格式
   :        填充          对齐方式        宽度          ,         . 精度          类型
引导符号    用于填充        < 左对齐       字符串的     数字的千     浮点数小数部     整数类型 : b,d,o,x,X'
           单个字符        > 右对齐       输出宽度     位分隔符     分的精度或字     浮点数类型 :e,E,f,%
                         ^ 居中对齐                              符串的最大输
                                                                出长度
"""
s = 'helloworld'
# 字符串的显示宽度为20，左对齐，空白部分使用* 号填充
print('{0:*<20}'.format(s))  # helloworld**********
print('{0:*>20}'.format(s))  # **********helloworld
print('{0:*^20}'.format(s))  # *****helloworld*****

# 居中对齐
print(s.center(20, '*'))  # *****helloworld*****

# 千位分隔符（只适用于整数和浮点数）
print('{0:,}'.format(987654321))  # 987,654,321
print('{0:,}'.format(987654321.7865))  # 987,654,321.7865

# 浮点数小数部分的精度
print('{0:.2f}'.format(3.1419826))  # 3.14
# 字符串类型 .表示是最大的显示长度
print('{0:.5}'.format('helloworld'))  # hello

# 整数类型
a = 425
print('二进制:{0:b},十进制:{0:d},八进制:{0:o},十六进制:{0:x},十六进制：{0:X}'.format(a))
# 二进制:110101001,十进制:425,八进制:651,十六进制:1a9,十六进制：1A9

# 浮点数类型
b = 3.1415926
print('{0:.2f},{0:.2E},{0:.2e},{0:.2%}'.format(b))
# 3.14,3.14E+00,3.14e+00,314.16%
